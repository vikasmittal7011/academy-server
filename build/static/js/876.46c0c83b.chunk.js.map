{"version":3,"file":"static/js/876.46c0c83b.chunk.js","mappings":"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","sources":["components/common/SimpleLoading.js","components/course/Details.js","constant/index.js","components/course-event/Form.js","pages/CourseEnroll.js","utils/payment.js"],"sourcesContent":["import { ClipLoader } from \"react-spinners\"\r\n\r\nconst SimpleLoading = () => {\r\n    return (\r\n        <div className=\"justify-center flex items-center\">\r\n            <ClipLoader size={100} color=\"blue\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleLoading\r\n","const Details = ({ course }) => {\r\n    return (\r\n        <div className=\"flex flex-col gap-3\">\r\n            <h1 className=\"font-bold text-2xl md:text-3xl tracking-wide\">{course.name}</h1>\r\n            <p>Course Type: {course.programmeType}</p>\r\n            <p>Learning Mode : {course.mode}</p>\r\n            <p>Learning Eligibility : {course.eligibility}</p>\r\n            <p>Duaration : {Math.round(course.duration / 12)} Year, {course.duration % 12} Months</p>\r\n            <p>Fees : {course.fees}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","export const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nexport const inputClass = \"border-2 border-blue-400 focus:outline-blue-800 rounded-md w-full py-2 px-2 font-normal mt-2 text-lg\";\r\n\r\nexport const labelClass = \"font-bold text-gray-700 text-lg flex-1\";\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport payment from \"../../utils/payment\";\r\nimport { inputClass, labelClass } from \"../../constant/index\";\r\nimport { validateReferCodeAsync } from \"../../features/user/userSlice\";\r\nimport { paymentIntentAync, selectrazor } from \"../../features/razor/razorSlice\";\r\n\r\nconst Form = ({ referCode, course, user, validReferCode }) => {\r\n\r\n    const [amount, setAmount] = useState();\r\n\r\n    const { data } = useSelector(selectrazor);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, watch, reset, handleSubmit } = useForm();\r\n    const watchReferCode = watch(\"referCode\")\r\n\r\n    const varifyReferCode = () => {\r\n        if (watchReferCode) {\r\n            dispatch(validateReferCodeAsync({ referCode: watchReferCode }))\r\n        }\r\n    };\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        handleOnlinePayment();\r\n    })\r\n\r\n    const getTotalAmount = () => {\r\n        let amount = course.fees;\r\n        if (watchReferCode && validReferCode) {\r\n            amount = Math.round(course?.fees * (1 - 10 / 100))\r\n        }\r\n        setAmount(amount)\r\n    }\r\n\r\n    const handleOnlinePayment = async () => {\r\n        dispatch(paymentIntentAync({ totalAmount: amount }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.success) {\r\n            const callback_url = `${process.env.REACT_APP_URL}course/enroll?courseId=${course.id}&totalPrice=${amount}&referCode=${referCode || \"\"}`\r\n            const { key } = data;\r\n            payment(callback_url, key, data, user, course)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data.success]);\r\n\r\n    useEffect(() => {\r\n        reset({ referCode: referCode })\r\n    }, [referCode, reset]);\r\n\r\n    useEffect(() => {\r\n        if (watch(\"numberOfSeat\")) {\r\n            reset({ numberOfSeat: 1 })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getTotalAmount()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [validReferCode]);\r\n\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"flex flex-col\">\r\n\r\n            <label className={labelClass}>\r\n                Refer Code\r\n                <input {...register(\"referCode\")} className={`${inputClass} ${watchReferCode && validReferCode && \"border-green-500 oultine-green-500\"}`} />\r\n            </label>\r\n            <p onClick={varifyReferCode} className=\"underline my-1 cursor-pointer\">Verify</p>\r\n\r\n            <p>Total Price {amount}</p>\r\n\r\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white transition outline-none w-full py-2 px-4 textlg mt-5 rounded-md\">Enroll Me/Payement</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Toast from \"../components/common/Toast\";\r\nimport Form from \"../components/course-event/Form\";\r\nimport Details from \"../components/course/Details\";\r\nimport SimpleLoading from \"../components/common/SimpleLoading\";\r\nimport { clearMessage, selectuser } from \"../features/user/userSlice\";\r\nimport { selectcourse, fetchCourseByIdAync } from \"../features/course/courseSlice\";\r\n\r\nconst CourseEnroll = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, referCode } = useParams();\r\n\r\n    const { validReferCode, message, user } = useSelector(selectuser)\r\n    const { course, status } = useSelector(selectcourse)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCourseByIdAync(id))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Toast message={message} type={validReferCode ? \"success\" : \"err\"} clearMessage={clearMessage} />\r\n            {status === \"loading\" ?\r\n                <SimpleLoading />\r\n                :\r\n                <>\r\n                    {course.name ?\r\n                        <>\r\n                            <h1 className=\"mb-5 text-3xl font-bold\">Enroll In Course</h1>\r\n                            <div className=\"border border-slate-400 rounded-md p-4\">\r\n\r\n                                <div className=\"grid md:grid-cols-[2fr_1fr] gap-3\">\r\n                                    <Details course={course} />\r\n\r\n                                    <Form referCode={referCode} course={course} user={user} validReferCode={validReferCode} />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"font-bold flex justify-center mt-10 text-2xl text-red-500\">\r\n                            Events Not Found\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseEnroll\r\n","const payment = (callBackURL, key, data, user, event) => {\r\n    const options = {\r\n        key,\r\n        amount: +data.data.amount,\r\n        currency: \"INR\",\r\n        name: \"Vikey's Acadmey\",\r\n        description: \"Vikey's Acadmey Online Payment\",\r\n        image: `https://cdn.pixabay.com/photo/2016/10/09/19/19/coins-1726618_640.jpg`,\r\n        order_id: data.data.id,\r\n        callback_url: callBackURL,\r\n        prefill: {\r\n            name: user.name,\r\n            email: user.email,\r\n            contact: user.contact\r\n        },\r\n        notes: {\r\n            address: \"Razorpay Corporate Office\",\r\n            bookingInfo: { ...event, hotel: event.id }\r\n        },\r\n        theme: {\r\n            color: \"#3399cc\"\r\n        }\r\n    };\r\n    const razor = new window.Razorpay(options);\r\n    razor.open()\r\n}\r\n\r\nexport default payment"],"names":["SimpleLoading","_jsx","className","children","ClipLoader","size","color","_ref","course","_jsxs","name","programmeType","mode","eligibility","Math","round","duration","fees","scrollToTop","window","scrollTo","inputClass","labelClass","referCode","user","validReferCode","amount","setAmount","useState","data","useSelector","selectrazor","dispatch","useDispatch","register","watch","reset","handleSubmit","useForm","watchReferCode","onSubmit","handleOnlinePayment","async","paymentIntentAync","totalAmount","useEffect","success","callback_url","concat","process","id","key","payment","numberOfSeat","getTotalAmount","onClick","varifyReferCode","validateReferCodeAsync","CourseEnroll","useParams","message","selectuser","status","selectcourse","fetchCourseByIdAync","Toast","type","clearMessage","_Fragment","Details","Form","callBackURL","event","options","currency","description","image","order_id","prefill","email","contact","notes","address","bookingInfo","hotel","theme","Razorpay","open"],"sourceRoot":""}