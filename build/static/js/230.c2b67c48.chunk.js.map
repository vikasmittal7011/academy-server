{"version":3,"file":"static/js/230.c2b67c48.chunk.js","mappings":"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","sources":["components/common/SimpleLoading.js","components/event/Details.js","constant/index.js","components/enroll-event/Form.js","pages/EventEnroll.js","utils/payment.js"],"sourcesContent":["import { ClipLoader } from \"react-spinners\"\r\n\r\nconst SimpleLoading = () => {\r\n    return (\r\n        <div className=\"justify-center flex items-center\">\r\n            <ClipLoader size={100} color=\"blue\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleLoading\r\n","import moment from \"moment\";\r\n\r\nconst Details = ({ event }) => {\r\n    return (\r\n        <div className=\"flex flex-col gap-3\">\r\n            <h1 className=\"font-bold text-2xl md:text-3xl tracking-wide\">{event.name}</h1>\r\n            <p>Venue : {event?.location?.address}, {event?.location?.state}, {event?.location?.country}, {event?.location?.zipCode}</p>\r\n            <a className=\"underline w-fit\" href={event?.location?.mapLocation} rel=\"noreferrer\" target=\"_blank\">Map Location</a>\r\n            <p>Start Date : {moment(event.startDate).format('MMMM Do YYYY, h:mm a')}</p>\r\n            <p>End Date : {moment(event.endDate).format('MMMM Do YYYY, h:mm a')}</p>\r\n            <p>Fees : â‚¹ {event.fees} /-</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","export const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nexport const inputClass = \"border-2 border-blue-400 focus:outline-blue-800 rounded-md w-full py-2 px-2 font-normal mt-2 text-lg\";\r\n\r\nexport const labelClass = \"font-bold text-gray-700 text-lg flex-1\";\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport payment from \"../../utils/payment\";\r\nimport { inputClass, labelClass } from \"../../constant/index\";\r\nimport { validateReferCodeAsync } from \"../../features/user/userSlice\";\r\nimport { paymentIntentAync, selectrazor } from \"../../features/razor/razorSlice\";\r\n\r\nconst Form = ({ referCode, event, user, validReferCode }) => {\r\n\r\n    const [amount, setAmount] = useState();\r\n\r\n    const { data } = useSelector(selectrazor);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, formState: { errors }, watch, reset, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            numberOfSeat: 1\r\n        }\r\n    });\r\n    const watchReferCode = watch(\"referCode\")\r\n\r\n    const varifyReferCode = () => {\r\n        if (watchReferCode) {\r\n            dispatch(validateReferCodeAsync({ referCode: watchReferCode }))\r\n        }\r\n    };\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        handleOnlinePayment();\r\n    })\r\n\r\n    const handleOnlinePayment = async () => {\r\n        dispatch(paymentIntentAync({ totalAmount: amount }))\r\n    }\r\n\r\n    const getTotalAmount = () => {\r\n        let amount = event.fees * watch(\"numberOfSeat\");\r\n        if (watchReferCode && validReferCode) {\r\n            amount = Math.round(event?.fees * (1 - 10 / 100)) * watch(\"numberOfSeat\")\r\n        }\r\n        setAmount(amount)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.success) {\r\n            const callback_url = `${process.env.REACT_APP_URL}event/enroll?eventId=${event.id}&totalPrice=${amount}&referCode=${referCode || \"\"}&numberOfSeat=${watch(\"numberOfSeat\")}`\r\n            const { key } = data;\r\n            payment(callback_url, key, data, user, event)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data.success]);\r\n\r\n    useEffect(() => {\r\n        reset({ referCode: referCode })\r\n    }, [referCode, reset]);\r\n\r\n    useEffect(() => {\r\n        if (watch(\"numberOfSeat\")) {\r\n            reset({ numberOfSeat: 1 })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getTotalAmount()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [validReferCode, watch(\"numberOfSeat\")]);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"flex flex-col\">\r\n            <label className={labelClass}>\r\n                Number Of Seat\r\n                <input type=\"number\" min={1} max={10} {...register(\"numberOfSeat\", { required: \"This fiels is require...\" })} className={inputClass} />\r\n                {errors.numberOfSeat && <span className=\"text-red-500\">{errors.numberOfSeat.message}</span>}\r\n            </label>\r\n\r\n            <label className={labelClass}>\r\n                Refer Code\r\n                <input {...register(\"referCode\")} className={`${inputClass} ${watchReferCode && validReferCode && \"border-green-500 oultine-green-500\"}`} />\r\n            </label>\r\n            <p onClick={varifyReferCode} className=\"underline my-1 cursor-pointer\">Verify</p>\r\n\r\n            <p>Total Price {amount}</p>\r\n\r\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white transition outline-none w-full py-2 px-4 textlg mt-5 rounded-md\">Enroll Me</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Toast from \"../components/common/Toast\";\r\nimport Details from \"../components/event/Details\";\r\nimport Form from \"../components/enroll-event/Form\";\r\nimport SimpleLoading from \"../components/common/SimpleLoading\";\r\nimport { clearMessage, selectuser } from \"../features/user/userSlice\";\r\nimport { fetchEventByIdAync, selectevent } from \"../features/event/eventSlice\";\r\n\r\nconst EventEnroll = () => {\r\n\r\n    const { validReferCode, message, user } = useSelector(selectuser)\r\n\r\n    const { event, status } = useSelector(selectevent)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, referCode } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchEventByIdAync(id))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Toast message={message} type={validReferCode ? \"success\" : \"err\"} clearMessage={clearMessage} />\r\n            {status === \"loading\" ?\r\n                <SimpleLoading />\r\n                :\r\n                <>\r\n                    {event.name ?\r\n                        <>\r\n                            <h1 className=\"mb-5 text-3xl font-bold\">Book Your seat fro Event</h1>\r\n                            <div className=\"border border-slate-400 rounded-md p-4\">\r\n\r\n                                <div className=\"grid md:grid-cols-[2fr_1fr] gap-3\">\r\n                                    <Details event={event} />\r\n\r\n                                    <Form referCode={referCode} event={event} user={user} validReferCode={validReferCode} />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </> :\r\n                        <div className=\"font-bold flex justify-center mt-10 text-2xl text-red-500\">\r\n                            Event Not Found\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventEnroll\r\n","const payment = (callBackURL, key, data, user, event) => {\r\n    const options = {\r\n        key,\r\n        amount: +data.data.amount,\r\n        currency: \"INR\",\r\n        name: \"Vikey's Acadmey\",\r\n        description: \"Vikey's Acadmey Online Payment\",\r\n        image: `https://cdn.pixabay.com/photo/2016/10/09/19/19/coins-1726618_640.jpg`,\r\n        order_id: data.data.id,\r\n        callback_url: callBackURL,\r\n        prefill: {\r\n            name: user.name,\r\n            email: user.email,\r\n            contact: user.contact\r\n        },\r\n        notes: {\r\n            address: \"Razorpay Corporate Office\",\r\n            bookingInfo: { ...event, hotel: event.id }\r\n        },\r\n        theme: {\r\n            color: \"#3399cc\"\r\n        }\r\n    };\r\n    const razor = new window.Razorpay(options);\r\n    razor.open()\r\n}\r\n\r\nexport default payment"],"names":["SimpleLoading","_jsx","className","children","ClipLoader","size","color","_ref","_event$location","_event$location2","_event$location3","_event$location4","_event$location5","event","_jsxs","name","location","address","state","country","zipCode","href","mapLocation","rel","target","moment","startDate","format","endDate","fees","scrollToTop","window","scrollTo","inputClass","labelClass","referCode","user","validReferCode","amount","setAmount","useState","data","useSelector","selectrazor","dispatch","useDispatch","register","formState","errors","watch","reset","handleSubmit","useForm","defaultValues","numberOfSeat","watchReferCode","onSubmit","handleOnlinePayment","async","paymentIntentAync","totalAmount","useEffect","success","callback_url","concat","process","id","key","payment","getTotalAmount","Math","round","type","min","max","required","message","onClick","varifyReferCode","validateReferCodeAsync","EventEnroll","selectuser","status","selectevent","useParams","fetchEventByIdAync","Toast","clearMessage","_Fragment","Details","Form","callBackURL","options","currency","description","image","order_id","prefill","email","contact","notes","bookingInfo","hotel","theme","Razorpay","open"],"sourceRoot":""}