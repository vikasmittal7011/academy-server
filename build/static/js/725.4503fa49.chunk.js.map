{"version":3,"file":"static/js/725.4503fa49.chunk.js","mappings":"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","sources":["components/common/Heading.js","components/course-form/Detail.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowUpTrayIcon.js","components/course-form/Images.js","components/course-form/Otpions.js","constant/index.js","pages/AddCourse.js"],"sourcesContent":["const Heading = ({ heading }) => {\r\n    return (\r\n        <h1 className=\"text-3xl font-bold mb-3\">{heading}</h1>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n","import { useFormContext } from \"react-hook-form\"\r\n\r\nimport Heading from \"../common/Heading\";\r\nimport { inputClass, labelClass } from \"../../constant\"\r\n\r\nconst Detail = () => {\r\n\r\n    const { register, formState: { errors } } = useFormContext();\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-5\">\r\n            <Heading heading=\"Add New Course\" />\r\n            <label className={labelClass}>\r\n                Name\r\n                <input\r\n                    type=\"text\"\r\n                    {...register(\"name\", {\r\n                        required: \"This field is require...\"\r\n                    })}\r\n                    className={inputClass} />\r\n                {errors.name &&\r\n                    <span className=\"text-red-500\">{errors.name.message}</span>\r\n                }\r\n            </label>\r\n\r\n            <label className={labelClass}>\r\n                Discription\r\n                <textarea\r\n                    rows={5}\r\n                    {...register(\"discription\", {\r\n                        required: \"This field is require...\"\r\n                    })}\r\n                    className={inputClass} />\r\n                {errors.discription &&\r\n                    <span className=\"text-red-500\">{errors.discription.message}</span>\r\n                }\r\n            </label>\r\n\r\n            <label className={labelClass}>\r\n                Eligibility\r\n                <input\r\n                    type=\"text\"\r\n                    {...register(\"eligibility\", {\r\n                        required: \"This field is require...\"\r\n                    })}\r\n                    className={inputClass} />\r\n                {errors.eligibility &&\r\n                    <span className=\"text-red-500\">{errors.eligibility.message}</span>\r\n                }\r\n            </label>\r\n\r\n            <label className={labelClass}>\r\n                Duration\r\n                <input\r\n                    type=\"number\"\r\n                    {...register(\"duration\", {\r\n                        required: \"This field is require...\"\r\n                    })}\r\n                    className={inputClass} />\r\n                {errors.duration &&\r\n                    <span className=\"text-red-500\">{errors.duration.message}</span>\r\n                }\r\n            </label>\r\n\r\n            <label className={labelClass}>\r\n                Fees\r\n                <input\r\n                    type=\"number\"\r\n                    {...register(\"fees\", {\r\n                        required: \"This field is require...\"\r\n                    })}\r\n                    className={inputClass} />\r\n                {errors.fees &&\r\n                    <span className=\"text-red-500\">{errors.fees.message}</span>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpTrayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ArrowUpTrayIcon);\nexport default ForwardRef;","import { useRef } from \"react\";\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { ArrowUpTrayIcon, TrashIcon } from \"@heroicons/react/24/outline\";\r\n\r\nimport Heading from \"../common/Heading\"\r\nimport { inputClass } from \"../../constant\"\r\n\r\n\r\nconst Images = ({ images, setImages, error, setError }) => {\r\n\r\n    const imgClickRef = useRef()\r\n\r\n    const { register, setValue, watch } = useFormContext();\r\n\r\n    const handleRefClick = () => {\r\n        imgClickRef.current.click();\r\n    }\r\n\r\n    const removeImage = () => {\r\n        setImages(\"\")\r\n    }\r\n\r\n    const handleImageChange = e => {\r\n        setError(\"\")\r\n        const files = e.target.files;\r\n\r\n        Array.from(files).forEach(file => {\r\n            if (file && file.type.startsWith('image/')) {\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    setImages(reader.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        setError(\"\")\r\n        if (watch(\"img\")) {\r\n            try {\r\n                const response = await fetch(watch(\"img\"))\r\n                const blob = await response.blob();\r\n\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    setImages(reader.result)\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            } catch (Err) {\r\n            }\r\n\r\n        }\r\n        setValue(\"img\", \"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-3\">\r\n            <Heading heading=\"Images\" />\r\n            <div className=\"flex items-center justify-center gap-2\">\r\n                <input type='text' {...register(\"img\")} className={`${inputClass} block w-full mt-0`} />\r\n                <button type=\"button\" onClick={handleClick} className=\"md:w-28 w-32 bg-gray-500 px-3 py-3 rounded-md transition-all hover:bg-gray-700 hover:text-white\">Add This</button>\r\n            </div>\r\n            <div className=\"grid gap-3 grid-cols-3 md:grid-cols-4 lg:grid-cols-6 mt-2\">\r\n\r\n                {images &&\r\n                    <div className=\"h-32 flex gap-5 relative\">\r\n                        <img src={images} alt=\"\" className=\"rounded-2xl object-cover w-full\" />\r\n                        <div onClick={removeImage} className=\"absolute bg-gray-700 text-white rounded-md right-2 bottom-2 cursor-pointer px-2 py-1 opacity-75\">\r\n                            <TrashIcon className=\"w-5 h-5\" />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <input type=\"file\" multiple className=\"hidden\" ref={imgClickRef} onChange={handleImageChange} />\r\n                <button type=\"button\" onClick={handleRefClick} className=\"border bg-transparent rounded-2xl p-8 text-gray-600 text-2xl flex justify-center items-center gap-1\">\r\n                    <ArrowUpTrayIcon className=\"w-8 h-8\" />\r\n                    Upload\r\n                </button>\r\n            </div>\r\n            {error && <span className=\"text-red-500 font-bold text-lg\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Images\r\n","import { useFormContext } from \"react-hook-form\"\r\n\r\nimport { labelClass } from \"../../constant\";\r\n\r\nconst Otpions = () => {\r\n\r\n    const { register, formState: { errors }, watch } = useFormContext();\r\n    const typeWatch = watch(\"mode\")\r\n    const typeProgrammeType = watch(\"programmeType\")\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-5\">\r\n            <div className=\"flex flex-col gap-2\">\r\n                <h1 className={labelClass}>Learning Mode</h1>\r\n                <div className=\"grid grid-cols-2  gap-2\">\r\n                    {[\"Online\", \"Offline\"].map((type, i) => (\r\n                        <label key={i} className={`cursor-pointer font-semibold text-sm rounded-full px-4 py-2 ${typeWatch === type ? \"bg-blue-300\" : \"bg-gray-300\"}`} >\r\n                            <input type='radio' value={type} {...register(\"mode\", { required: \"This field is require...\" })} className=\"hidden\" />\r\n                            <span>{type}</span>\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n                {errors.mode &&\r\n                    <span className=\"text-red-500 text-xl font-bold\">{errors.mode.message}</span>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"flex flex-col gap-2\">\r\n                <h1 className={labelClass}>Programme Type</h1>\r\n                <div className=\"grid grid-cols-1 base:grid-cols-2 md:grid-cols-3  gap-2\">\r\n                    {[\"Bachlore\", \"Certificate\", \"Diploma\", \"Master\", \"Post Graduate Diploma\"].map((type, i) => (\r\n                        <label key={i} className={`cursor-pointer font-semibold text-sm rounded-full px-4 py-2 ${typeProgrammeType === type ? \"bg-blue-300\" : \"bg-gray-300\"}`} >\r\n                            <input type='radio' value={type} {...register(\"programmeType\", { required: \"This field is require...\" })} className=\"hidden\" />\r\n                            <span>{type}</span>\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n                {errors.programmeType &&\r\n                    <span className=\"text-red-500 text-xl font-bold\">{errors.programmeType.message}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Otpions\r\n","export const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nexport const inputClass = \"border-2 border-blue-400 focus:outline-blue-800 rounded-md w-full py-2 px-2 font-normal mt-2 text-lg\";\r\n\r\nexport const labelClass = \"font-bold text-gray-700 text-lg flex-1\";\r\n","import { ClipLoader } from \"react-spinners\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\n\r\nimport Toast from \"../components/common/Toast\";\r\nimport Images from \"../components/course-form/Images\";\r\nimport Detail from \"../components/course-form/Detail\";\r\nimport Options from \"../components/course-form/Otpions\";\r\nimport { clearMessage, createCourseAync, selectcourse } from \"../features/course/courseSlice\";\r\n\r\nconst AddCourse = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { status, message, courseAdd } = useSelector(selectcourse)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [photos, setPhotos] = useState();\r\n\r\n    const formMethod = useForm();\r\n    const { handleSubmit } = formMethod;\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (photos === \"\" || undefined) {\r\n            setError(\"Plase privide some images...\")\r\n        }\r\n        dispatch(createCourseAync({ ...data, image: photos }))\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (courseAdd) {\r\n            setTimeout(() => {\r\n                navigate(\"/\")\r\n            }, 5000);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [courseAdd]);\r\n\r\n    return (\r\n        <FormProvider {...formMethod}>\r\n            <Toast message={message} type={status !== \"failed\" ? \"success\" : \"err\"} clearMessage={clearMessage} />\r\n\r\n            <form className=\"flex flex-col gap-5 w-full\" onSubmit={onSubmit}>\r\n\r\n                <Detail />\r\n\r\n                <Options />\r\n\r\n                <Images images={photos} setImages={setPhotos} error={error} setError={setError} />\r\n\r\n                <div className=\"flex flex-col md:flex-row justify-end md:items-center gap-5\">\r\n                    <button type=\"submit\" className={`bg-blue-700 outline-none text-white p-2 px-4 rounded-md font-bold text-xl hover:bg-blue-500 transition-all ${status === \"loading\" ? \"cursor-not-allowed\" : \"cursor-pointer\"} flex justify-center items-center gap-2`}>\r\n                        <ClipLoader size={20} color=\"white\" loading={status === \"loading\"} />\r\n                        <div>Save</div>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\nexport default AddCourse\r\n"],"names":["_ref","heading","_jsx","className","children","Detail","register","formState","errors","useFormContext","_jsxs","Heading","labelClass","type","required","inputClass","name","message","rows","discription","eligibility","duration","fees","React","svgRef","title","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","images","setImages","error","setError","imgClickRef","useRef","setValue","watch","concat","onClick","async","response","fetch","blob","reader","FileReader","onloadend","result","readAsDataURL","Err","src","alt","removeImage","TrashIcon","multiple","onChange","e","files","target","Array","from","forEach","file","startsWith","handleRefClick","current","click","ArrowUpTrayIcon","Otpions","typeWatch","typeProgrammeType","map","i","value","mode","programmeType","scrollToTop","window","scrollTo","AddCourse","navigate","useNavigate","status","courseAdd","useSelector","selectcourse","dispatch","useDispatch","useState","photos","setPhotos","formMethod","useForm","handleSubmit","onSubmit","data","createCourseAync","image","useEffect","setTimeout","FormProvider","Toast","clearMessage","Options","Images","ClipLoader","size","color","loading"],"sourceRoot":""}