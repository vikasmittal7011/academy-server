{"version":3,"file":"static/js/754.14f051de.chunk.js","mappings":"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","sources":["components/common/SimpleLoading.js","components/event/Details.js","components/event/DeleteNotic.js","pages/EventDetail.js"],"sourcesContent":["import { ClipLoader } from \"react-spinners\"\r\n\r\nconst SimpleLoading = () => {\r\n    return (\r\n        <div className=\"justify-center flex items-center\">\r\n            <ClipLoader size={100} color=\"blue\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleLoading\r\n","import moment from \"moment\";\r\n\r\nconst Details = ({ event }) => {\r\n    return (\r\n        <div className=\"flex flex-col gap-3\">\r\n            <h1 className=\"font-bold text-2xl md:text-3xl tracking-wide\">{event.name}</h1>\r\n            <p>Venue : {event?.location?.address}, {event?.location?.state}, {event?.location?.country}, {event?.location?.zipCode}</p>\r\n            <a className=\"underline w-fit\" href={event?.location?.mapLocation} rel=\"noreferrer\" target=\"_blank\">Map Location</a>\r\n            <p>Start Date : {moment(event.startDate).format('MMMM Do YYYY, h:mm a')}</p>\r\n            <p>End Date : {moment(event.endDate).format('MMMM Do YYYY, h:mm a')}</p>\r\n            <p>Fees : â‚¹ {event.fees} /-</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import { ClipLoader } from \"react-spinners\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { deteleEventAync, selectevent } from \"../../features/event/eventSlice\";\r\n\r\nconst DeleteNotic = ({ isOpen, handleIsOpen, id }) => {\r\n\r\n    const { status } = useSelector(selectevent)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deteleEventAync(id))\r\n        handleIsOpen();\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center\">\r\n            {isOpen && (\r\n                <div className=\"fixed py-5 inset-0 flex items-center justify-center bg-black bg-opacity-50 transition-opacity duration-300\">\r\n                    <div className=\"bg-gray-200 rounded-lg p-6 lg:w-3/4 md:w-3/4 sm:w-3/4 l:w-full s:w-full xs:w-full l:m-5 s:m-5 xs:m-5 transform transition-transform duration-300\">\r\n                        <div className=\"flex justify-between items-center\">\r\n\r\n                            <button onClick={handleDelete} className={`bg-blue-700 outline-none text-white p-2 px-4 rounded-md font-bold text-xl hover:bg-blue-500 transition-all ${status === \"loading\" ? \"cursor-not-allowed\" : \"cursor-pointer\"} flex justify-center items-center gap-2`}>\r\n                                <ClipLoader size={20} color=\"white\" loading={status === \"loading\"} />\r\n                                <div>Delete</div>\r\n                            </button>\r\n\r\n                            <button onClick={handleIsOpen} type=\"button\" className={`bg-red-700 outline-none text-white p-2 px-4 rounded-md font-bold text-xl hover:bg-red-500 transition-all flex justify-center items-center gap-2`}>\r\n                                <div>Cancel</div>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNotic\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\"\r\n\r\nimport Toast from \"../components/common/Toast\";\r\nimport Details from \"../components/event/Details\";\r\nimport { selectuser } from \"../features/user/userSlice\";\r\nimport DeleteNotic from \"../components/event/DeleteNotic\";\r\nimport SimpleLoading from \"../components/common/SimpleLoading\";\r\nimport { clearMessage, fetchEventByIdAync, selectevent } from \"../features/event/eventSlice\";\r\n\r\nconst EventDetail = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [urlCopy, setUrlCopy] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleIsOpen = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const { user } = useSelector(selectuser)\r\n\r\n    const { status, event, eventDelete, message } = useSelector(selectevent)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchEventByIdAync(id))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id]);\r\n\r\n    const handleRefer = async () => {\r\n        const url = `http://localhost:3000/event/register/${event.id}/${user.referCode}`;\r\n        await navigator.clipboard.writeText(url)\r\n        setUrlCopy(true)\r\n        setTimeout(() => {\r\n            setUrlCopy(false)\r\n        }, 2000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (eventDelete) {\r\n            setTimeout(() => {\r\n                navigate(\"/\")\r\n            }, 3000);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [eventDelete]);\r\n\r\n    return (\r\n        <>\r\n            <Toast message={message} type={status === \"failed\" ? \"err\" : \"success\"} clearMessage={clearMessage} />\r\n            <DeleteNotic isOpen={isOpen} handleIsOpen={handleIsOpen} id={event.id} />\r\n            {status === \"loading\" ?\r\n                <SimpleLoading />\r\n                :\r\n                <>\r\n                    {event.name ? <>\r\n                        <div className=\"border border-slate-400 rounded-md p-4\">\r\n                            <div className=\"grid md:grid-cols-[2fr_1fr] gap-3\">\r\n                                <Details event={event} />\r\n                            </div>\r\n\r\n                            <div className=\"py-5 grid grid-cols-2 md:grid-cols-4 gap-5\">\r\n                                {user.role === \"admin\" && <Link to={`/edit-event/${event.id}`} className=\"bg-blue-500 text-center rounded-md text-lg px-4 py-2 outline-none transition-all text-white hover:bg-blue-700\">Edit</Link>}\r\n\r\n                                <Link to={`/event/register/${event.id}`} className=\"bg-green-600 text-center rounded-md text-lg px-4 py-2 outline-none transition-all text-white hover:bg-green-500\">Register</Link>\r\n\r\n                                {user.role === \"admin\" && <button onClick={handleIsOpen} className=\"bg-red-500 text-center rounded-md text-lg px-4 py-2 outline-none transition-all text-white hover:bg-red-700\">Delete</button>}\r\n\r\n                                <button onClick={handleRefer} className=\"bg-violet-500 text-center rounded-md text-lg px-4 py-2 outline-none transition-all text-white hover:bg-violet-700\">{urlCopy ? \"Copyed\" : \"Refer\"}</button>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"my-5\">\r\n                            <h1 className=\"font-bold text-3xl tracking-wide my-5\">Our Speakers</h1>\r\n                            {\r\n                                event?.speakers?.map((speaker, i) => (\r\n                                    <div key={i} className=\"my-3 border border-slate-300 p-3 rounded-e-sm\">\r\n                                        <p>Name: {speaker.name}</p>\r\n                                        <p>About: {speaker.bio}</p>\r\n                                        <p>Post: {speaker.title}</p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"my-5\">\r\n                            <h1 className=\"font-bold text-3xl tracking-wide my-5\">About Event</h1>\r\n                            <p className=\"text-gray-700\">{event.description}</p>\r\n                        </div>\r\n                    </> :\r\n                        <div className=\"font-bold flex justify-center mt-10 text-2xl text-red-500\">\r\n                            Event Not Found\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventDetail\r\n"],"names":["SimpleLoading","_jsx","className","children","ClipLoader","size","color","_ref","_event$location","_event$location2","_event$location3","_event$location4","_event$location5","event","_jsxs","name","location","address","state","country","zipCode","href","mapLocation","rel","target","moment","startDate","format","endDate","fees","isOpen","handleIsOpen","id","status","useSelector","selectevent","dispatch","useDispatch","onClick","handleDelete","deteleEventAync","concat","loading","type","EventDetail","_event$speakers","navigate","useNavigate","urlCopy","setUrlCopy","useState","setIsOpen","user","selectuser","eventDelete","message","useParams","useEffect","fetchEventByIdAync","setTimeout","_Fragment","Toast","clearMessage","DeleteNotic","Details","role","Link","to","async","url","referCode","navigator","clipboard","writeText","speakers","map","speaker","i","bio","title","description"],"sourceRoot":""}